#■ 앤서블 블록 및 오류 처리
#  앤서블에서는 블록(block)이라는 오류를 제어하는 문법을 제공한다.
#    - block: 실행할 기본 작업을 정의함
#    - rescure: block 절에 정의된 작업이 실패하는 경우 실행할 작업을 정의함.

---
# 모든 호스트에 대해 실행할 플레이북 정의
- hosts: all
  # 플레이북에서 사용할 변수 정의
  vars:
    logdir: /var/log/daily_log    # 로그 디렉토리 경로
    logfile: todays.log           # 생성할 로그 파일명

  # 실행할 작업(태스크) 목록
  tasks:
    # 로그 환경 구성을 위한 작업 블록
    - name: Configure Log Env
      block:
        # 지정된 로그 디렉토리가 존재하는지 확인하는 작업
        - name: Find Directory
          ansible.builtin.find:
            path: "{{ logdir }}"  # vars에서 정의한 디렉토리 경로 사용
          register: result        # 검색 결과를 result 변수에 저장
          # CentOS에서 디렉토리가 없을 때 발생하는 특정 에러 메시지를 실패 조건으로 설정
          failed_when: "'was skipped as it does not seem to be a valid directory' in result.msg"

        # 디버그를 추가한 이유는 책과 다르게 난 centos라서 result에 담기는 메시지 값이 다르게 나온다.
        # 그래서 디버그 확인을 통해 어떤 값이 들어가는지 확인하여 수정하였다.
        # 디버깅을 위해 result 변수의 내용을 출력
        - name: Debug result variable
          debug:
            var: result           # result 변수의 전체 내용을 표시
            verbosity: 0          # verbosity 0은 항상 출력됨을 의미

      # block 작업이 실패했을 때 실행할 복구(rescue) 작업
      rescue:
        # 디렉토리가 없을 경우 새로 생성
        - name: Make Directory when Not found Directory
          ansible.builtin.file:
            path: "{{ logdir }}"  # 생성할 디렉토리 경로
            state: directory      # directory 상태로 생성
            mode: '0755'          # 디렉토리 권한 설정 (rwxr-xr-x)

      # block이 성공하든 실패하든 항상(always) 실행할 작업
      always:
        # 로그 파일 생성
        - name: Create File
          ansible.builtin.file:
            path: "{{ logdir }}/{{ logfile }}"  # 생성할 파일의 전체 경로
            state: touch                        # 빈 파일 생성
            mode: '0644'                        # 파일 권한 설정 (rw-r--r--)

